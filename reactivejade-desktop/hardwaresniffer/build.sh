SCRIPT_FILE=$(readlink -f "$0")
SCRIPT_PATH=$(dirname "$SCRIPT_FILE")
LIB_PATH="$SCRIPT_PATH/../lib"
JADE_JAR="$LIB_PATH/jade.jar"
CLASSES_PATH="$SCRIPT_PATH/classes"
SOURCE_PATH="$SCRIPT_PATH/src"
SOURCE_FILES="$SOURCE_PATH/*.java"

ANDROID_LIB_PATH="$SCRIPT_PATH/../../android/app/libs"

REACTIVEJADE_JAR="$LIB_PATH/ReactiveJade.jar"
HARDWARESNIFFER_JAR="$LIB_PATH/HardwareSniffer.jar"
HARDWARESNIFFERANDROID_JAR="$LIB_PATH/HardwareSnifferAndroid.jar"

JVM_CLASSES_PATH="$CLASSES_PATH/jvm"
JVM_SOURCE_FILES="$SOURCE_PATH/jvm/*.java"
DVM_CLASSES_PATH="$CLASSES_PATH/dvm"
DVM_SOURCE_FILES="$SOURCE_PATH/dvm/*.java"

ANDROID_PATH="$SCRIPT_PATH/../../android/app"
ANDROID_SRC_HARDWARESNIFFER_PATH="$ANDROID_PATH/src/main/java/com/reactivejade/hardwaresniffer"
ANDROID_SRC_HARDWARESNIFFER_FILES="$ANDROID_SRC_HARDWARESNIFFER_PATH/*.java"

rm -rf $CLASSES_PATH
mkdir $CLASSES_PATH

mkdir $JVM_CLASSES_PATH
javac -cp $JADE_JAR:$REACTIVEJADE_JAR -d $JVM_CLASSES_PATH $SOURCE_FILES $JVM_SOURCE_FILES
jar -cf $HARDWARESNIFFER_JAR -C $JVM_CLASSES_PATH .

if ! [ -d $ANDROID_SRC_HARDWARESNIFFER_PATH ]
then
  mkdir $ANDROID_SRC_HARDWARESNIFFER_PATH
fi

rm -f $ANDROID_SRC_HARDWARESNIFFER_FILES
cp $SOURCE_FILES $ANDROID_SRC_HARDWARESNIFFER_PATH

# for f in $SOURCE_FILES
# do
#   FILENAME=$(basename "$f")
#   ANDROID_SRC_FILE="$ANDROID_SRC_REACTIVEJADE_PATH/$FILENAME"

#   if [ -f $ANDROID_SRC_FILE ]
#   then
#     rm -f $ANDROID_SRC_FILE
#   fi

#   cp $f $ANDROID_SRC_REACTIVEJADE_PATH
# done

# rm -f $ANDROID_SRC_HARDWARESNIFFER_PATH/*.java
# cp $SOURCE_FILES $ANDROID_SRC_HARDWARESNIFFER_PATH

# mkdir $DVM_CLASSES_PATH
# javac -cp $JADE_JAR:$REACTIVEJADE_JAR -d $DVM_CLASSES_PATH $SOURCE_FILES $DVM_SOURCE_FILES
# jar -cf $HARDWARESNIFFERANDROID_JAR -C $DVM_CLASSES_PATH .

# rm $ANDROID_LIB_PATH/HardwareSnifferAndroid.jar
# cp $HARDWARESNIFFERANDROID_JAR $ANDROID_LIB_PATH

# rm -rf $ANDROID_SRC_HARDWARESNIFFER_PATH
# cp -r $DVM_CLASSES_PATH/hardwaresniffer $ANDROID_SRC_HARDWARESNIFFER_PATH
